{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Banner.ts","../src/Modal.ts","../src/CookiesManager.ts"],"sourcesContent":["\nexport class Utils {\n    public static encode(str) {\n        return window.btoa(str);\n    }\n    public static decode(a) {\n        return window.atob(a);\n    }\n    private static isHTML(str: string) {\n        var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n\n        // test isHTML regex\n        return str.match(isHTML);\n\n    }\n    public static wrapString(str: string, tag: string) {\n        if (this.isHTML(str)) {\n            return str;\n        }\n        return `<${tag}>${str}</${tag}>`;\n    }\n\n    public static deepEqual(x, y) {\n        const ok = Object.keys, tx = typeof x, ty = typeof y;\n        return x && y && tx === 'object' && tx === ty ? (\n            ok(x).length === ok(y).length &&\n            ok(x).every(key => this.deepEqual(x[key], y[key]))\n        ) : (x === y);\n    }\n\n    public static compareObjects(a, b) {\n        let s = (o) => Object.entries(o).sort().map(i => {\n            if (i[1] instanceof Object) i[1] = s(i[1]);\n            return i\n        })\n        return JSON.stringify(s(a)) === JSON.stringify(s(b))\n    }\n\n    public static objectEquals(obj1, obj2) {\n        const JSONstringifyOrder = obj => {\n            const keys = {};\n            JSON.stringify(obj, (key, value) => {\n                keys[key] = null;\n                return value;\n            });\n            return JSON.stringify(obj, Object.keys(keys).sort());\n        };\n        return JSONstringifyOrder(obj1) === JSONstringifyOrder(obj2);\n    }\n\n    // @audit this is removing te callback functions. Watch out!\n    public static prepareObjectsForComparison(obj1, obj2) {\n        var A = JSON.parse(JSON.stringify(obj1));\n        var B = JSON.parse(JSON.stringify(obj2));\n\n\n        A.forEach(element => {\n            element.checked = true;\n        });\n        B.forEach(element => {\n            element.checked = true;\n        });\n        return { A, B }\n    }\n\n    public static mergeRecursively(obj1, obj2) {\n        for (var p in obj2) {\n            try {\n                // Property in destination object set; update its value.\n                if (obj2[p].constructor == Object) {\n                    obj1[p] = this.mergeRecursively(obj1[p], obj2[p]);\n                } else {\n                    obj1[p] = obj2[p];\n                }\n            } catch (e) {\n                // Property in destination object not set; create it and set its value.\n                obj1[p] = obj2[p];\n            }\n        }\n        return obj1;\n    }\n}","import { Modal } from \"./Modal\";\nimport { Utils } from './utils';\nimport { CookiesManager } from './CookiesManager';\n\nexport class Banner {\n    private options: BannerOptions;\n    private banner: string;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: BannerOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        if (cookiesManager.getOptions().bannerOptions.inject) {\n            this.injectBanner();\n        }\n        if (cookiesManager.getOptions().bannerOptions.injectWall) {\n            this.injectWall();\n        }\n        this.setEventListeners();\n    }\n\n    public setEventListeners() {\n        try {\n            let self = this;\n            // Accept all button\n            document.querySelector(\".cm-banner-accept-all-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.acceptAllButton();\n                self.options.acceptAllButton.onClick();\n            });\n\n            // Reject all button\n            document.querySelector(\".cm-banner-reject-all-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.acceptAllButton(false);\n                self.options.rejectAllButton.onClick();\n            });\n\n            // Config button\n            document.querySelector(\".cm-banner-config-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.showModal();\n                self.options.settingsButton.onClick();\n            });\n        } catch (error) {\n            console.error(\"Can't set the event listener for the cookies banner. Can't find the HTML elements.\")\n        }\n\n    }\n\n\n\n\n    private generateBanner() {\n        return `\n                <div class=\"c-cookies-config-banner\">\n                    <div class=\"banner-container\">\n                        ${this.getBannerText()}\n                        <div class=\"banner-container__buttons\">\n                            ${this.getRejectAllButton()}\n                            ${this.getAcceptAllButton()}\n                            ${this.getSettingsButton()}\n                        </div>\n                    </div>\n                </div> \n                `;\n    }\n\n    getAcceptAllButton() {\n        return this.options.acceptAllButton.show ? `<button class=\"banner-container__button banner-container__accept-all-btn cm-banner-accept-all-btn\">${this.options.acceptAllButton.text}</button>` : \"\";\n    }\n    getRejectAllButton() {\n        return this.options.rejectAllButton.show ? `<button class=\"banner-container__button banner-container__reject-all-btn cm-banner-reject-all-btn\">${this.options.rejectAllButton.text}</button>` : \"\";\n    }\n    getSettingsButton() {\n        return this.options.settingsButton.show ? `<button class=\"banner-container__button-link banner-container__config-btn cm-banner-config-btn\">${this.options.settingsButton.text}</button>` : \"\";\n    }\n\n    private getBannerText() {\n        return Utils.wrapString(this.options.bannerText, \"p\");\n    }\n\n    private injectWall() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateWall());\n            }\n        } catch (error) {\n            console.error(\"Couldn't inject the wall.\");\n        }\n    }\n\n    public injectBanner() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateBanner());\n            }\n        } catch (error) {\n            console.error(\"Couldn't inject the banner.\");\n        }\n    }\n\n    private generateWall() {\n        const blur = this.options.wallBlur ? \"c-cookies-config-wall--blurred\" : \"\";\n        return `<div class=\"c-cookies-config-wall ${blur}\"></div>`;\n    }\n\n    public showWall() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-wall\")!.classList.add(\"wall-show\");\n        } catch (error) {\n            console.error(\"Couldn't apply the background wall.\")\n        }\n    }\n\n    public hideWall() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-wall\")!.classList.remove(\"wall-show\");\n        } catch (error) {\n            console.error(\"Unable to hide the background wall.\")\n        }\n    }\n\n    public hideScroll() {\n        try {\n            document.querySelector(\"body\")!.style.overflow = \"hidden\";\n            document.querySelector(\"html\")!.style.overflow = \"hidden\";\n        } catch (error) {\n            console.error(\"Unable to hide the scroll.\")\n        }\n    }\n\n    public showScroll() {\n        try {\n            document.querySelector(\"body\")!.style.overflow = \"auto\";\n            document.querySelector(\"html\")!.style.overflow = \"auto\";\n        } catch (error) {\n            console.error(\"Unable to show the scroll.\")\n        }\n    }\n\n    public show() {\n        if (this.options.wall) {\n            this.showWall();\n        }\n        if (!this.options.wallScroll) {\n            this.hideScroll();\n        }\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-banner .banner-container\")!.classList.add(\"show-banner\");\n        } catch (error) {\n            console.error(\"Unable to show the banner.\")\n        }\n    }\n    public hide() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-banner\")!.style.display = \"none\";\n        } catch (error) {\n            console.error(\"Unable to hide the banner.\")\n        }\n        this.hideWall();\n        this.showScroll();\n    }\n\n}\n\n\n\n\nexport interface BannerOptions {\n    bannerText: string;\n    wall: boolean,\n    injectWall: boolean,\n    wallScroll: boolean,\n    wallBlur: boolean,\n    inject: boolean,\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    settingsButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    acceptRequiredOnlyButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    rejectAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n}\n","import { CookieCategory, CookiesManager } from './CookiesManager';\nexport class Modal {\n\n    private options: ModalOptions;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: ModalOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        if (cookiesManager.getOptions().modalOptions.inject) {\n            this.injectModal();\n        }\n        this.setEventListeners();\n        this.updateSwitchesStatus();\n    }\n\n\n    async show() {\n        try {\n\n            const modal = document.querySelector(\".c-cookies-config-modal\");\n            modal!.classList.add(this.options.showModalClass);\n            await new Promise(r => setTimeout(r, 10)); // This is to make the show animation work\n            // Toggle accordions after showing modal\n            var acc = document.getElementsByClassName(\"cm-accordion\");\n            var i;\n            var self = this;\n            for (i = 0; i < acc.length; i++) {\n                if (acc[i].classList.contains(\"cm-active-on-load\")) {\n                    acc[i].classList.remove(\"cm-active-on-load\");\n                    await new Promise(r => setTimeout(r, 100)); // This is to make the show animation work\n                    self.toggleAccordion(acc[i]);\n                }\n            }\n\n            const modalContainer = document.getElementById(\"modal-container\");\n            modalContainer!.classList.add(this.options.showModalClass);\n            // Hide body scroll\n            this.cookiesManager.getBanner().hideScroll();\n        } catch (error) {\n            console.error(\"Could not show cookie modal.\")\n            console.error(error)\n        }\n    }\n    hide(self?: Modal) { // Destucted object, so we can access this context\n        const modalContainer = document.getElementById('modal-container');\n        modalContainer!.classList.remove(this.options.showModalClass);\n\n        // If banner is not shown, show scroll\n        const bannerContainer = document.querySelector(\".c-cookies-config-banner .banner-container\");\n        if (bannerContainer?.classList.contains(\"show-banner\") == false) {\n            this.cookiesManager.getBanner().showScroll();\n        } else {\n            // If the banner is shown, check if the scroll was active. If it was, show the scroll on modal close.\n            const wallScroll = this.cookiesManager.getOptions().bannerOptions.wallScroll;\n            if (wallScroll) {\n                this.cookiesManager.getBanner().showScroll();\n            }\n        }\n    }\n\n    setEventListeners() {\n\n        try {\n            var self = this;\n            // Modal close button\n            const closeBtn = document.querySelectorAll('.close-modal')\n            closeBtn.forEach(c => c.addEventListener('click', () => {\n                this.hide(self);\n            }))\n\n            // Accept all button\n            const acceptAllButton = document.querySelector('.cm-modal-accept-all')!;\n            if (acceptAllButton) {\n                acceptAllButton.addEventListener('click', function () {\n                    self.cookiesManager.acceptAllButton();\n                    self.cookiesManager.getOptions().modalOptions.acceptAllButton.onClick();\n                });\n            }\n\n            // Reject all button\n            const rejectAllButton = document.querySelector('.cm-modal-reject-all')!;\n            if (rejectAllButton) {\n                rejectAllButton.addEventListener('click', function () {\n                    self.cookiesManager.acceptAllButton(false);\n                    self.cookiesManager.getOptions().modalOptions.rejectAllButton.onClick();\n                });\n            }\n\n            // Save button\n            const saveButton = document.querySelector('.cm-modal-save')!;\n            if (saveButton) {\n                saveButton.addEventListener('click', function () {\n                    self.cookiesManager.injectScripts();\n                    self.cookiesManager.hideBanner();\n                    self.cookiesManager.saveButton();\n                    self.cookiesManager.callIndividualCallbacks();\n                    self.cookiesManager.getOptions().modalOptions.saveButton.onClick();\n                });\n            }\n\n            // Switches\n            this.cookiesManager.getOptions().cookieCategories.forEach((category: CookieCategory, index) => {\n                var checkbox = document.querySelector(`.cm-switch-${index}`)!;\n                const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n                checkbox.addEventListener('change', function () {\n                    if (this.checked) {\n                        category.checked = true;\n                        self.toggleSwitch(index, true);\n                    } else {\n                        category.checked = false;\n                        self.toggleSwitch(index, false);\n                    }\n                });\n            });\n\n            // Set accordion toggle on click\n            var acc = document.getElementsByClassName(\"cm-accordion\");\n            var i;\n            var self = this;\n            for (i = 0; i < acc.length; i++) {\n                acc[i].addEventListener(\"click\", function () {\n                    self.toggleAccordion(this);\n                });\n            }\n\n\n        } catch (error) {\n            console.error(\"Could not set event listeners for cookie modal.\")\n        }\n    }\n\n    private updateSwitchDisabledStatus(toggleIndex: number, required: boolean) {\n        try {\n            const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n            const checkboxInput = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.cm-switch-${toggleIndex}`)!;\n            const checkboxSpan = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.slider`)!;\n            const checkboxLabel = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`label.switch`)!;\n            if (required) {\n                checkboxInput.setAttribute(\"disabled\", \"\")\n                checkboxSpan.classList.add(\"disabled\");\n                checkboxLabel.classList.add(\"disabled\");\n            } else {\n                checkboxInput.removeAttribute(\"disabled\");\n                checkboxSpan.classList.remove(\"disabled\");\n                checkboxLabel.classList.remove(\"disabled\");\n            }\n        } catch (error) {\n            console.error(`Could not change the disabled status from switch cm-switch-${toggleIndex}. Do you have equal switches and cookieCategories? If cm-switch-${toggleIndex} does not exist in your DOM, probably not.`)\n\n        }\n    }\n\n    private toggleSwitch(toggleIndex: number, checked: boolean) {\n        try {\n            const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n            const checkboxInput = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.cm-switch-${toggleIndex}`)!;\n            if (!checked) {\n                checkboxInput.removeAttribute(\"checked\");\n            } else {\n                checkboxInput.setAttribute(\"checked\", \"\")\n            }\n            checkboxInput.checked = checked;\n        } catch (error) {\n            console.error(`Could not toggle the switch cm-switch-${toggleIndex}. Do you have equal switches and cookieCategories? If cm-switch-${toggleIndex} does not exist in your DOM, probably not.`)\n        }\n    }\n\n    private async toggleAccordion(element) {\n        element.classList.toggle(\"cm-active\");\n        var panel = element.nextElementSibling;\n        if (panel.style.maxHeight) {\n            panel.style.maxHeight = null;\n        } else {\n            panel.style.maxHeight = panel.scrollHeight + \"px\";\n        }\n    }\n\n    public injectModal() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateModal());\n            }\n        } catch (error) {\n            console.error(\"Could not inject cookie modal.\");\n        }\n    }\n\n    // If we're not injecting the HTML, we need to update the HTML manually after the page is loaded.\n    public updateSwitchesStatus() {\n        //const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n        let cookieCategories = this.cookiesManager.getOptions().cookieCategories;\n        cookieCategories.forEach((cookieCategory, index) => {\n            try {\n                this.toggleSwitch(index, cookieCategory.checked)\n                this.updateSwitchDisabledStatus(index, cookieCategory.required)\n            } catch (error) {\n                console.error(\"You have more cookieCategories defined in javascript than in your HTML. Please, use the same number of cookieCategories.\")\n            }\n        });\n    }\n\n    private generateCategoriesBlocks() {\n        let categoriesBlocks = \"\";\n        let cookieCategories = this.cookiesManager.getOptions().cookieCategories;\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            cookieCategories = this.cookiesManager.getCookiesOptions();\n        }\n        cookieCategories.forEach((element, index) => {\n            const disabled = element.required ? \"disabled\" : \"\";\n            const checked = element.checked ? \"checked\" : \"\";\n            const accordionClass = element.accordion.enable ? \"cm-accordion\" : \"\";\n            const accordionPanel = element.accordion.enable ? \"cm-panel\" : \"\";\n            const activeAccordion = element.accordion.active ? \"cm-active-on-load\" : \"\";\n            const accordionChevron = element.accordion.enable ? \"<div class='cc-header__left'></div>\" : \"\";\n            const boxedHeader = element.boxedHeader ? \"cm-boxed\" : \"\";\n            const boxedBody = element.boxedBody ? \"cookie-category__body--boxed\" : \"\";\n            // const boxedHeaderMArgin = element.accordion.active ? \"\" : \"no-chevron\";\n            const block = `\n            <div class=\"cookie-category\">\n                <div class=\"cookie-category__header cc-header ${accordionClass} ${boxedHeader} ${activeAccordion}\">\n                    ${accordionChevron}\n                    <div class=\"cc-header__right\">\n                        <div class=\"header__title\">\n                            ${element.title}\n                        </div>\n                        <div class=\"header__switch\">\n                            <label class=\"switch ${disabled}\">\n                                <input ${disabled} ${checked} class=\"cm-switch-${index}\" type=\"checkbox\">\n                                <span class=\"slider round ${disabled}\"></span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"cookie-category__body body ${boxedBody} ${accordionPanel}\">\n                    <p>${element.description}</p>\n                </div>\n            </div>\n            `;\n            categoriesBlocks += block;\n        });\n        return categoriesBlocks;\n\n    }\n\n    getCloseButton() {\n        return this.options.closeButton.show ? `<div class=\"modal__close close-modal\" title=\"Close\"><div class=\"close-modal-img\"></div></div>` : \"\";\n    }\n    getAcceptAllButton() {\n        return this.options.acceptAllButton.show ? `<button class=\"modal__button modal__button-width cm-modal-accept-all footer__button-accept-all\">${this.options.acceptAllButton.text}</button>` : \"\";\n    }\n    getRejectAllButton() {\n        return this.options.rejectAllButton.show ? `<button class=\"modal__button modal__button-width cm-modal-reject-all footer__button-reject-all\">${this.options.rejectAllButton.text}</button>` : \"\";\n    }\n    getSaveButton() {\n        return this.options.saveButton.show ? ` <button class=\"modal__button-link close-modal cm-modal-save footer__button-save-btn\"> ${this.options.saveButton.text} </button>` : \"\";\n    }\n\n    generateModal() {\n        return `\n        <div class=\"c-cookies-config-modal\">\n        <div class=\"modal__container\" id=\"modal-container\">\n          <div class=\"modal__content\">\n            ${this.getCloseButton()}\n            <div class=\"modal__title\">${this.options.title}</div>\n            <p class=\"modal__description\">${this.options.description}</p>\n            <div class=\"modal__cookie-categories\">\n                ${this.generateCategoriesBlocks()}\n            </div>\n    \n            <div class=\"modal__footer\">\n             ${this.getRejectAllButton()}\n             ${this.getAcceptAllButton()}\n             ${this.getSaveButton()}\n            </div>\n          </div>\n        </div>\n      </div>\n        `;\n    }\n\n}\n\nexport interface ModalOptions {\n    inject: boolean,\n    title: string,\n    description: string,\n    showModalClass: string,\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    rejectAllButton: {\n        show: boolean,\n        text: string,\n        onClick: Function,\n    },\n    saveButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    closeButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n}","\nimport { Banner, BannerOptions } from \"./Banner\";\nimport { ModalOptions, Modal } from './Modal';\nimport \"./scss/styles.scss\";\nimport { Utils } from './utils';\n\ninterface cookieCatergoryCallbackInterface {\n    (CookieCategory: CookieCategory): void;\n}\nexport class CookiesManager {\n\n    // var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n    private modalOptions: Options;\n    private banner: Banner;\n    private modal: Modal;\n    private acceptAll: boolean = false;\n    private configChanged: boolean = false;\n    private onCookieCategoryChange: cookieCatergoryCallbackInterface;\n\n\n    public getBanner(): Banner {\n        return this.banner;\n    }\n\n    public setBanner(banner: Banner): void {\n        this.banner = banner;\n    }\n\n    public getModal(): Modal {\n        return this.modal;\n    }\n\n    public setModal(modal: Modal): void {\n        this.modal = modal;\n    }\n\n    public getOptions(): Options {\n        return this.modalOptions;\n    }\n\n    public on(listener, callback: cookieCatergoryCallbackInterface) {\n        if (listener == \"onCookieCategoryChange\") {\n            this.onCookieCategoryChange = callback;\n        }\n    }\n\n    constructor(options: Options) {\n        if (options == null) {\n            throw new Error(\"Options for CookiesManager cannot be null.\");\n        } else {\n            if (options.cookieCategories == null) {\n                throw new Error(\"You should provide at least one cookie category\");\n            }\n            // Set all cookie categories as checked by default. Set default value for cookie category\n            const mergedCategories = new Array<CookieCategory>;\n            options.cookieCategories.forEach(category => {\n                //category.checked = true; // Dont set checked to true. Set checked if checked was set\n                mergedCategories.push(Utils.mergeRecursively(this.getDefaultCookieCategoryOptions(), category));\n            });\n            options.cookieCategories = mergedCategories;\n            // Merge the default options with user options\n            const clonedCategories: CookieCategory[] = options.cookieCategories;\n            options = Utils.mergeRecursively(this.getDefaultOptions(), options);\n            this.modalOptions = options;\n            this.constructorInitializationFunction(options, clonedCategories);\n        }\n    }\n\n    private constructorInitializationFunction(options, clonedCategories: CookieCategory[]) {\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) { // If there's already configuration saved\n            // Prepare the options to compare them.\n            // @audit be careful, this function is comparing two strings. The callback functions are being removed, so we need to set them below.\n            var optionsComparison = Utils.prepareObjectsForComparison(this.modalOptions.cookieCategories, this.getCookiesOptions());\n            // Check if the options in localStorage and the options from the constructor are the same\n            if (Utils.objectEquals(optionsComparison.A, optionsComparison.B)) {\n                // If the options are the same, just inject the scripts\n                this.modalOptions.cookieCategories = this.getCookiesOptions();\n                // @audit-ok We need to set the categories events again, as the callback functions were removed.\n                this.modalOptions.cookieCategories.forEach((cookieCategory, index) => {\n                    cookieCategory.events = clonedCategories[index].events;\n                });\n\n            } else {\n                localStorage.removeItem(\"cookiesManagerOptions\");\n                // If the options are different, set the configChanged to true\n                // We are in the constructor. By setting this to true, it might show the banner and modal if the user has set askOnChange to true\n                this.configChanged = true;\n            }\n        }\n\n        // Generate modal\n        if (options.modalOptions != null) {\n            this.createModal(options.modalOptions);\n        }\n\n        if (options.bannerOptions != null) {\n            this.createBanner(options.bannerOptions);\n        }\n    }\n\n    public setEventListeners() {\n        this.modal.setEventListeners();\n        this.banner.setEventListeners();\n    }\n\n    public createBanner(options: BannerOptions) {\n        this.banner = new Banner(this, options);\n        return this.banner;\n    }\n    public createModal(options: ModalOptions) {\n        this.modal = new Modal(this, options);\n        return this.modal;\n    }\n\n    public setCookies(): void {\n        this.modalOptions.cookieCategories.forEach(category => {\n            category.events.setCookiesOnChange.forEach(cookie => {\n                let cookieValue;\n                if (category.checked) {\n                    cookieValue = cookie.valueOnAccept;\n                    this.setCookie(cookie.cookieName, cookieValue, cookie.expirationDays, \"/\");\n                } else {\n                    cookieValue = cookie.valueOnReject;\n                    if (this.getOptions().askAgainIfRejectedAfterDays != -1) {\n                        this.setCookie(cookie.cookieName, cookieValue, this.getOptions().askAgainIfRejectedAfterDays, \"/\");\n                    } else {\n                        this.setCookie(cookie.cookieName, cookieValue, cookie.expirationDays, \"/\");\n                    }\n                }\n\n            })\n        });\n    }\n\n    public setCookie(cookieName: string, cookieValue: string, expDays = 400, path = '/') {\n        try {\n            document.cookie = cookieName + '=' + encodeURIComponent(cookieValue) + '; max-age=' + (3600 * (24 * expDays)) + '; path=' + path\n        } catch (error) {\n            console.error(`Error setting cookie: ${error}`)\n        }\n    }\n\n    public getCookie(cookieName) {\n        let cookie = {};\n        document.cookie.split(';').forEach(function (el) {\n            let [key, value] = el.split('=');\n            cookie[key.trim()] = value;\n        })\n        return cookie[cookieName];\n    }\n\n    public acceptAllButton(acceptedAll = true) {\n        this.getOptions().cookieCategories.forEach((cookieCategory: CookieCategory) => {\n            if (cookieCategory.required && acceptedAll == false) {\n                cookieCategory.checked = true;\n            } else {\n                cookieCategory.checked = acceptedAll;\n            }\n        })\n        this.modal.updateSwitchesStatus();\n        this.acceptAll = true;\n        this.modal.hide();\n        this.banner.hide();\n        this.injectScripts();\n        this.saveCookieOptions();\n        this.setCookies();\n        this.callIndividualCallbacks();\n    }\n\n    public showModal() {\n        this.modal.show();\n    }\n\n    public showBanner() {\n        this.banner.show();\n    }\n\n    public hideBanner() {\n        this.banner.hide();\n    }\n\n    public hideModal() {\n        this.modal.hide();\n    }\n\n    public callIndividualCallbacks() {\n        this.modalOptions.cookieCategories.forEach(category => {\n            if (category.checked || this.acceptAll) {\n                category.events.onAccept();\n            } else if (!category.checked) {\n                category.events.onReject();\n            }\n        });\n    }\n\n    private injectScript(src: string, async = false) {\n        var s = document.createElement('script');\n        s.setAttribute('src', src);\n        s.async = async;\n        document.body.appendChild(s);\n    }\n\n    private injectGTM(gtmCode: string) {\n        try {\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                const f = d.getElementsByTagName(s)[0];\n                const j = d.createElement(s) as HTMLInputElement;\n                const\n                    dl = l != 'dataLayer' ? `&l=${l}` : '';\n                //j.async = true;\n                j.src = `https://www.googletagmanager.com/gtm.js?id=${i}${dl}`;\n                f.parentNode!.insertBefore(j, f);\n            }(window, document, 'script', 'dataLayer', gtmCode));\n            (window as any).dataLayer = (window as any).dataLayer || [];\n        } catch (error) {\n            console.error(\"Couldn't inject GTM.\")\n        }\n    }\n\n    public async init(banner: boolean, modal: boolean) {\n        if (this.modalOptions.askOnce) {\n            if (localStorage.getItem(\"cookiesManagerOptions\") == null || this.configChanged) {\n                await this.initShow(banner, modal)\n            } else {\n                let initDone = false;\n                const cookieOptions: CookieCategory[] = this.getCookiesOptions(); // Cookie options from localStorage\n                // Check for the cookies\n                for (let [categoryIndex, category] of this.modalOptions.cookieCategories.entries()) {\n                    if (initDone) break;\n                    for (let [cookieObjectIndex, cookieObject] of category.events.setCookiesOnChange.entries()) {\n\n                        // If the cookie exists\n                        if (this.getCookie(cookieObject.cookieName)) {\n                            // If the cookie has different values than the set ones, ask again\n                            if (![cookieObject.valueOnAccept.toString(), cookieObject.valueOnReject.toString()].includes(this.getCookie(cookieObject.cookieName))) {\n                                this.initShow(banner, modal);\n                                initDone = true;\n                                break;\n                            } else {\n                                // Los valores son correctos. Comprobar si el usuario ha cambiado la cookie desde devTools\n                                // Probablemente haya que meter esto en try catch\n                                if (category.checked) {\n                                    const savedLocalStorageCookieValue = cookieOptions[categoryIndex].events.setCookiesOnChange[cookieObjectIndex].valueOnAccept; // Valor de la cookie en localstorage\n                                    const realCookieValue = this.getCookie(cookieOptions[categoryIndex].events.setCookiesOnChange[cookieObjectIndex].cookieName)\n                                    if (savedLocalStorageCookieValue.toString() != realCookieValue) {\n                                        this.initShow(banner, modal);\n                                        break;\n                                    }\n                                }\n\n                            }\n                        } else {\n                            this.initShow(banner, modal)\n                            initDone = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            await this.initShow(banner, modal)\n        }\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            this.injectScripts();\n            this.callIndividualCallbacks();\n        }\n    }\n\n    public async initShow(banner: boolean, modal: boolean) {\n        if (this.modalOptions.delay > 0) {\n            await new Promise(r => setTimeout(r, this.modalOptions.delay)); // This is to make the show animation work\n        }\n        if (banner) {\n            this.showBanner();\n        }\n        if (modal) {\n            this.showModal();\n        }\n    }\n\n    public injectScripts() {\n        try {\n\n            this.modalOptions.cookieCategories.forEach(category => {\n                if (this.onCookieCategoryChange != null) {\n                    this.onCookieCategoryChange(category);\n                }\n                if (category.checked || this.acceptAll) {\n                    category.scripts.forEach(script => {\n                        if (script[\"type\"] == ScriptType.STANDARD || script[\"type\"] == null) {\n                            if (script[\"scriptSrc\"] != null) {\n                                this.injectScript(script[\"scriptSrc\"], script[\"async\"])\n                            }\n                        } else {\n                            if (script[\"gtmCode\"] != null) {\n                                this.injectGTM(script[\"gtmCode\"]);\n                            } else {\n                                throw new Error(\"You should provide a gtmCode for the script\");\n                            }\n                        }\n                    });\n                }\n            });\n        } catch (error) {\n            console.error(`Couldn't inject scripts: ${error}`)\n        }\n    }\n\n    saveButton() {\n        this.saveCookieOptions();\n        this.setCookies();\n        this.callIndividualCallbacks();\n    }\n\n    saveCookieOptions() {\n        const base64Options = Utils.encode(JSON.stringify(this.modalOptions.cookieCategories));\n        localStorage.setItem(\"cookiesManagerOptions\", base64Options);\n    }\n\n    getCookiesOptions(): any {\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            return JSON.parse(Utils.decode(localStorage.getItem(\"cookiesManagerOptions\")));\n        }\n        return {};\n    }\n\n    private getDefaultCookieCategoryOptions(): CookieCategory {\n        return {\n            title: \"Cookie Category Example\",\n            description: \"Cookie category description\",\n            required: false,\n            id: \"\",\n            checked: true,\n            events: {\n                onAccept: () => { },\n                onReject: () => { },\n                setCookiesOnChange: []\n            },\n            accordion: {\n                enable: false,\n                enableOnDescriptionLength: 45,\n                active: false,\n            },\n            boxedHeader: false,\n            boxedBody: false,\n            scripts: []\n        }\n    }\n\n    private getDefaultOptions(): Options {\n        return {\n            askOnce: true,\n            askAgainIfRejectedAfterDays: -1,\n            delay: 0,\n            askOnChange: true,\n            initOnDomContentLoaded: true,\n            modalOptions: {\n                title: \"Cookie settings\",\n                description: \"Change the settings for the cookies here.\",\n                inject: true,\n                showModalClass: \"show-modal\",\n                acceptAllButton: {\n                    text: 'Accept all',\n                    show: true,\n                    onClick: () => { },\n                },\n                rejectAllButton: {\n                    text: 'Reject all',\n                    show: true,\n                    onClick: () => { },\n                },\n                saveButton: {\n                    text: 'Save',\n                    show: true,\n                    onClick: () => { },\n                },\n                closeButton: {\n                    text: 'Close',\n                    show: true,\n                    onClick: () => { },\n                },\n            },\n            bannerOptions: {\n                inject: true,\n                injectWall: true,\n                wall: true,\n                wallScroll: true,\n                wallBlur: false,\n                bannerText: 'This website uses cookies to ensure you get the best experience on our website.',\n                acceptAllButton: {\n                    text: 'Accept all',\n                    show: true,\n                    onClick: () => { },\n                },\n                settingsButton: {\n                    text: 'Settings',\n                    show: true,\n                    onClick: () => { },\n                },\n                acceptRequiredOnlyButton: {\n                    text: 'Configuración',\n                    show: false,\n                    onClick: () => { },\n                },\n                rejectAllButton: {\n                    text: 'Rechazar todo',\n                    show: true,\n                    onClick: () => { },\n                }\n            },\n            cookieCategories: [],\n        }\n    }\n\n\n\n}\nexport interface Events {\n    onAccept: Function,\n    onReject: Function,\n    setCookiesOnChange: Array<CookieObject>,\n}\n\nexport interface CookieObject {\n    cookieName: string,\n    valueOnAccept: string | number,\n    valueOnReject: string | number,\n    expirationDays: number,\n}\n\nexport interface Options {\n    cookieCategories: Array<CookieCategory>,\n    initOnDomContentLoaded: boolean,\n    askAgainIfRejectedAfterDays: number,\n    bannerOptions: BannerOptions,\n    modalOptions: ModalOptions,\n    askOnce: boolean,\n    askOnChange: boolean,\n    delay: number,\n}\n\nexport interface CookieCategory {\n    title: string,\n    id: string,\n    description: string,\n    required: boolean,\n    checked: boolean,\n    events: Events,\n    accordion: Accordion,\n    boxedHeader: boolean,\n    boxedBody: boolean,\n    scripts: [\n        {\n            type: ScriptType,\n            gtmCode: string,\n            scriptSrc: string,\n            async: boolean,\n        }\n    ] | []\n}\n\nexport interface Accordion {\n    enable: boolean,\n    enableOnDescriptionLength: number,\n    active: boolean,\n}\n\nexport enum ScriptType {\n    GTM,\n    STANDARD\n}"],"names":["Utils","encode","str","window","btoa","decode","a","atob","isHTML","RegExp","prototype","test","bind","match","wrapString","tag","this","deepEqual","x","y","_this","ok","Object","keys","tx","length","every","key","compareObjects","b","s","o","entries","sort","map","i","JSON","stringify","objectEquals","obj1","obj2","JSONstringifyOrder","obj","value","prepareObjectsForComparison","A","parse","B","forEach","element","checked","mergeRecursively","p","constructor","e","Banner","cookiesManager","options","banner","getOptions","bannerOptions","inject","injectBanner","injectWall","setEventListeners","_proto","self","document","querySelector","addEventListener","acceptAllButton","onClick","rejectAllButton","showModal","settingsButton","error","console","generateBanner","getBannerText","getRejectAllButton","getAcceptAllButton","getSettingsButton","show","text","bannerText","insertAdjacentHTML","generateWall","blur","wallBlur","showWall","classList","add","hideWall","remove","hideScroll","style","overflow","showScroll","wall","wallScroll","hide","display","pact","_Pact","_settle","state","v","then","observer","onFulfilled","onRejected","result","callback","thenable","ScriptType","Modal","modalOptions","injectModal","updateSwitchesStatus","_this2","Promise","resolve","showModalClass","r","setTimeout","_temp3","getElementById","getBanner","acc","getElementsByClassName","_temp","contains","toggleAccordion","_temp2","_catch","bannerContainer","_this3","querySelectorAll","c","saveButton","injectScripts","hideBanner","callIndividualCallbacks","cookieCategories","category","index","checkbox","toggleSwitch","updateSwitchDisabledStatus","toggleIndex","required","cookieCategoryElements","checkboxInput","checkboxSpan","checkboxLabel","setAttribute","removeAttribute","toggle","panel","nextElementSibling","maxHeight","scrollHeight","generateModal","_this4","cookieCategory","generateCategoriesBlocks","categoriesBlocks","localStorage","getItem","getCookiesOptions","disabled","accordion","enable","boxedHeader","active","title","boxedBody","accordionPanel","description","getCloseButton","closeButton","getSaveButton","CookiesManager","modal","acceptAll","configChanged","onCookieCategoryChange","Error","mergedCategories","Array","push","getDefaultCookieCategoryOptions","clonedCategories","getDefaultOptions","constructorInitializationFunction","setBanner","getModal","setModal","on","listener","optionsComparison","events","removeItem","createModal","createBanner","setCookies","setCookiesOnChange","cookie","cookieValue","setCookie","cookieName","valueOnAccept","expirationDays","valueOnReject","askAgainIfRejectedAfterDays","expDays","path","encodeURIComponent","getCookie","split","el","_el$split","trim","acceptedAll","saveCookieOptions","showBanner","hideModal","onAccept","onReject","injectScript","src","async","createElement","body","appendChild","injectGTM","gtmCode","w","d","l","Date","getTime","event","f","getElementsByTagName","j","parentNode","insertBefore","dataLayer","init","_temp4","_this5","_temp5","askOnce","initShow","_step","initDone","cookieOptions","_iterator","_createForOfIteratorHelperLoose","done","categoryIndex","_step$value","_step2","_iterator2","cookieObjectIndex","cookieObject","_step2$value","toString","includes","savedLocalStorageCookieValue","realCookieValue","_temp6","reject","_temp9","_this7","_temp10","delay","_this8","scripts","script","STANDARD","base64Options","setItem","id","enableOnDescriptionLength","askOnChange","initOnDomContentLoaded","acceptRequiredOnlyButton"],"mappings":"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"}