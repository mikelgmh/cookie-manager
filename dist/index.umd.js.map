{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/CookiesManager.ts","../src/Banner.ts","../src/Modal.ts"],"sourcesContent":["\nexport class Utils {\n    public static encode(str) {\n        return window.btoa(str);\n    }\n    public static decode(a) {\n        return window.atob(a);\n    }\n    public static isHTML(str: string) {\n        var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n\n        // test isHTML regex\n        return str.match(isHTML);\n\n    }\n    public static wrapString(str: string, tag: string) {\n        return `<${tag}>${str}</${tag}>`;\n    }\n\n    public static deepEqual(x, y) {\n        const ok = Object.keys, tx = typeof x, ty = typeof y;\n        return x && y && tx === 'object' && tx === ty ? (\n            ok(x).length === ok(y).length &&\n            ok(x).every(key => this.deepEqual(x[key], y[key]))\n        ) : (x === y);\n    }\n\n    public static compareObjects(a, b) {\n        let s = (o) => Object.entries(o).sort().map(i => {\n            if (i[1] instanceof Object) i[1] = s(i[1]);\n            return i\n        })\n        return JSON.stringify(s(a)) === JSON.stringify(s(b))\n    }\n\n    public static objectEquals(obj1, obj2) {\n        console.log(JSON.stringify(obj1))\n        console.log(JSON.stringify(obj2))\n     \n        const JSONstringifyOrder = obj => {\n            const keys = {};\n            JSON.stringify(obj, (key, value) => {\n                keys[key] = null;\n                return value;\n            });\n            return JSON.stringify(obj, Object.keys(keys).sort());\n        };\n        return JSONstringifyOrder(obj1) === JSONstringifyOrder(obj2);\n    }\n\n    public static prepareObjectsForComparison(obj1, obj2) {\n        var A = JSON.parse(JSON.stringify(obj1));\n        var B = JSON.parse(JSON.stringify(obj2));\n\n        \n        A.forEach(element => {\n            element.checked = true;\n        });\n        B.forEach(element => {\n            element.checked = true;\n        });\n        return { A, B }\n    }\n}","\nimport { Banner, BannerOptions } from \"./Banner\";\nimport { ModalOptions, Modal } from './Modal';\nimport \"./scss/styles.scss\";\nimport { Utils } from './utils';\nexport class CookiesManager {\n\n    // var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n    private modalOptions: Options;\n    private banner: Banner;\n    private modal: Modal;\n    private acceptAll: boolean = false;\n    private configChanged: boolean = false;\n\n\n    public getBanner(): Banner {\n        return this.banner;\n    }\n\n    public setBanner(banner: Banner): void {\n        this.banner = banner;\n    }\n\n    public getModal(): Modal {\n        return this.modal;\n    }\n\n    public setModal(modal: Modal): void {\n        this.modal = modal;\n    }\n\n    public getOptions(): Options {\n        return this.modalOptions;\n    }\n\n    constructor(options: Options) {\n        if (options == null) {\n            throw new Error(\"Options cannot be null\");\n        } else {\n            options.cookieCategories.forEach(category => {\n                category.checked = true;\n            });\n            this.modalOptions = options;\n            // Check options to create banner and modal\n\n            if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n                // Prepare the options to compare them.\n                var optionsComparison = Utils.prepareObjectsForComparison(this.modalOptions.cookieCategories, this.getCookiesOptions());\n\n                // Check if the options in localStorage and the options from the constructor are the same\n                if (Utils.objectEquals(optionsComparison.A, optionsComparison.B)) {\n                    // If the options are the same, just inject the scripts\n                    this.modalOptions.cookieCategories = this.getCookiesOptions();\n                    this.injectScripts();\n                } else {\n                    // If the options are different, set the configChanged to true\n                    // We are in the constructor. By setting this to true, it might show the banner and modal if the user has set askOnChange to true\n                    this.configChanged = true;\n                }\n            }\n\n            // Generate modal\n            if (options.modalOptions != null) {\n                this.createModal(options.modalOptions);\n            }\n\n\n            if (options.bannerOptions != null) {\n                if (options.modalOptions != null) {\n                    options.bannerOptions.settingsButton.modal = this.modal; // The modal was already created\n                }\n                this.createBanner(options.bannerOptions);\n            }\n\n        }\n\n    }\n\n\n    public createBanner(options: BannerOptions) {\n        this.banner = new Banner(this, options);\n        return this.banner;\n    }\n    public createModal(options: ModalOptions) {\n        this.modal = new Modal(this, options);\n        return this.modal;\n    }\n\n    public acceptAllButton() {\n        this.acceptAll = true;\n        this.modal.hide();\n        this.banner.hide();\n        this.injectScripts();\n        //this.setCookie();\n        this.saveCookieOptions();\n    }\n\n    public showModal() {\n        this.modal.show();\n    }\n\n    public showBanner() {\n        this.banner.show();\n    }\n\n    public hideBanner() {\n        this.banner.hide();\n    }\n\n    public hideModal() {\n        this.modal.hide();\n    }\n\n    private injectScript(src: string, async) {\n        var s = document.createElement('script');\n        s.setAttribute('src', src);\n        s.async = async;\n        document.body.appendChild(s);\n    }\n\n    public init(banner: boolean, modal: boolean) {\n        if (this.modalOptions.askOnce) {\n            // TODO ver casuÃ­stica si askOnChange es false, configChanged es true, se inyectan los scripts? No se intectan si no se muestran los banners\n            if (localStorage.getItem(\"cookiesManagerOptions\") == null || (this.modalOptions.askOnChange && this.configChanged)) {\n                var bannerShown = false;\n                var modalShown = false;\n                if (banner) {\n                    this.showBanner();\n                    bannerShown = true;\n                }\n                if (modal) {\n                    this.showModal();\n                    modalShown = true;\n                }\n                // if(!bannerShown && !modalShown && this.configChanged == true && !this.modalOptions.askOnChange){\n                //     this.injectScripts();\n                // }\n            }\n        } else {\n\n            if (banner) {\n                this.showBanner();\n            }\n            if (modal) {\n                this.showModal();\n            }\n\n        }\n    }\n\n    public injectScripts() {\n        this.modalOptions.cookieCategories.forEach(category => {\n            if (category.checked || this.acceptAll) {\n                category.scripts.forEach(script => {\n                    this.injectScript(script.scriptSrc, script.async)\n                });\n            }\n        });\n    }\n\n    saveButton() {\n        //this.setCookie();\n        this.saveCookieOptions();\n    }\n\n    saveCookieOptions() {\n        const base64Options = Utils.encode(JSON.stringify(this.modalOptions.cookieCategories));\n        localStorage.setItem(\"cookiesManagerOptions\", base64Options);\n    }\n\n    getCookiesOptions(): any {\n        return JSON.parse(Utils.decode(localStorage.getItem(\"cookiesManagerOptions\")));\n    }\n\n\n\n}\n\nexport interface Options {\n    cookieCategories: [\n        {\n            title: string,\n            description: string,\n            required: boolean,\n            checked: boolean,\n            scripts: [\n                {\n                    type: ScriptType,\n                    gtmCode: string,\n                    scriptSrc: string,\n                    async: boolean,\n                }\n            ]\n        }\n    ],\n    bannerOptions: BannerOptions,\n    modalOptions: ModalOptions,\n    askOnce: boolean,\n    askOnChange: boolean,\n}\n\nexport enum ScriptType {\n    GTM,\n    STANDARD\n}","import { Modal } from \"./Modal\";\nimport { Utils } from './utils';\nimport { CookiesManager } from './CookiesManager';\n\nexport class Banner {\n    private options: BannerOptions;\n    private banner: string;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: BannerOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        this.injectBanner();\n        this.setEventListeners();\n    }\n\n    private setEventListeners() {\n        let self = this;\n        // Accept all button\n        document.querySelector(\".banner-container__accept-all-btn\")!.addEventListener(\"click\", function () {\n            self.cookiesManager.acceptAllButton();\n        });\n\n        // Config button\n        document.querySelector(\".banner-container__config-btn\")!.addEventListener(\"click\", function () {\n            self.options.settingsButton.modal.show();\n        });\n\n    }\n\n\n\n\n    private generateBanner() {\n        return `\n                <div class=\"c-cookies-config-banner\">\n            <div class=\"banner-container\">\n            ${this.getBannerText()}\n            <div class=\"banner-container__buttons\">\n                <button class=\"banner-container__button banner-container__accept-all-btn\">${this.getAcceptAllButtonText()}</button>\n                <button class=\"banner-container__button-link banner-container__config-btn\">Configurar</button>\n            </div>\n            </div>\n        </div> \n        `;\n    }\n    private getBannerText() {\n\n        if (this.options.bannerText != undefined) {\n            if (Utils.isHTML(this.options.bannerText)) {\n                return this.options.bannerText;\n            }\n            // Else return wrapped\n            return Utils.wrapString(this.options.bannerText, \"p\");\n        }\n        return `\n                <p>Utilizamos cookies propias y de terceros para analizar el trÃ¡fico en nuestra web mediante la obtenciÃ³n de los\n                        datos necesarios para estudiar tu navegaciÃ³n. Puedes obtener mÃ¡s informaciÃ³n en la PolÃ­tica de Cookies. Puedes\n                        aceptar todas las cookies pulsando el botÃ³n âAceptar\" o configurarlas o rechazar su uso pulsando en\n                        \"Configurar\".</p>\n                `;\n    }\n    private getAcceptAllButtonText() {\n        if (this.options.acceptAllButton.text != undefined) {\n            // Else return wrapped\n            return this.options.acceptAllButton.text;\n        }\n        return `Aceptar todo`;\n    }\n\n    public injectBanner() {\n        if (document.querySelector(\"body\") != null) {\n\n            document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateBanner());\n        }\n    }\n\n    public showWall() {\n        const wall = '<div class=\"c-cookies-config-wall\"></div>';\n        document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", wall);\n\n    }\n\n    public hideWall() {\n        const test = document.querySelector<HTMLElement>(\".c-cookies-config-wall\")!;\n        test.style.display = \"none\";\n    }\n\n    public hideScroll() {\n        document.querySelector(\"body\")!.style.overflow = \"hidden\";\n    }\n\n    public showScroll() {\n        document.querySelector(\"body\")!.style.overflow = \"auto\";\n    }\n\n    public show() {\n        //document.querySelector<HTMLElement>(\".c-cookies-config-banner\")!.style(\"display\", \"blockxÂº\");\n        if (this.options.wall) {\n            this.showWall();\n        }\n        if (!this.options.wallScroll) {\n            this.hideScroll();\n        }\n        const test = document.querySelector<HTMLElement>(\".c-cookies-config-banner .banner-container\")!;\n        test.classList.add(\"show-banner\");\n    }\n    public hide() {\n        const test = document.querySelector<HTMLElement>(\".c-cookies-config-banner\")!;\n        test.style.display = \"none\";\n        this.hideWall();\n        this.showScroll();\n        // document.querySelector(\".c-cookies-config-banner\")!.style(\"display\", \"none\");\n        // Array.from(document.querySelector(\".c-cookies-config-banner\") as unknown as HTMLCollectionOf<HTMLElement>);\n    }\n}\n\n\n\n\nexport interface BannerOptions {\n    bannerText: string;\n    wall: boolean,\n    wallScroll: boolean,\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n    },\n    settingsButton: {\n        text: string,\n        show: boolean,\n        modal: Modal,\n    },\n    acceptRequiredOnlyButton: {\n        text: string,\n        show: boolean,\n    },\n    rejectAllButton: {\n        text: string,\n        show: boolean,\n    },\n}\n","import { CookiesManager } from './CookiesManager';\nexport class Modal {\n\n    private options: ModalOptions;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: ModalOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        this.injectModal();\n        this.setEventListeners();\n    }\n\n\n    show() {\n        const modalContainer = document.getElementById(\"modal-container\");\n        modalContainer!.classList.add('show-modal');\n        // Hide body scroll\n        document.querySelector(\"body\")!.style.overflow = \"hidden\";\n    }\n    hide() {\n        const modalContainer = document.getElementById('modal-container')\n        modalContainer!.classList.remove('show-modal')\n\n    }\n\n    setEventListeners() {\n\n        var self = this;\n        // Close modal\n        const closeBtn = document.querySelectorAll('.close-modal')\n        closeBtn.forEach(c => c.addEventListener('click', this.hide))\n\n        // Accept all btn\n        // Estos listeners deberÃ­an settearse en CookiesManager probablemente, porque va a haber que llamar mÃ©todos de ahÃ­. O eso o Modal deberÃ­a tener la instancia de CookiesManager.\n        const acceptAllBtn = document.querySelectorAll('.modal__button-accept-all')\n\n        acceptAllBtn.forEach(function (item) {\n            item.addEventListener('click', function () {\n                self.cookiesManager.acceptAllButton();\n            });\n        });\n\n        // Save button\n        const saveButton = document.querySelectorAll('.modal__button-save-btn')\n\n        saveButton.forEach(function (item) {\n            item.addEventListener('click', function () {\n               self.cookiesManager.injectScripts();\n                self.cookiesManager.hideBanner();\n                self.cookiesManager.saveButton();\n            });\n        });\n\n        // Switches\n        this.cookiesManager.getOptions().cookieCategories.forEach((category, index) => {\n\n            var checkbox = document.querySelector(`.cm-switch-${index}`)!;\n            checkbox.addEventListener('change', function () {\n                if (this.checked) {\n                    category.checked = true;\n                } else {\n                    category.checked = false;\n                }\n            });\n\n        });\n\n\n    }\n\n    public injectModal() {\n        if (document.querySelector(\"body\") != null) {\n            document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateModal());\n        }\n    }\n\n    private generateCategoriesBlocks() {\n        let categoriesBlocks = \"\";\n        this.cookiesManager.getOptions().cookieCategories.forEach((element, index) => {\n            const disabled = element.required ? \"disabled\" : \"\";\n            const checked = element.required ? \"checked\" : \"\";\n            const block = `\n            <div class=\"cookie-category\">\n                <div class=\"cookie-category__header header\">\n                    <h2 class=\"header__title\">\n                    ${element.title}\n                    </h2>\n                    <div class=\"header__switch\">\n                    <label class=\"switch ${disabled}\">\n                        <input ${disabled} checked class=\"cm-switch-${index}\" type=\"checkbox\">\n                        <span class=\"slider round\"></span>\n                    </label>\n                    </div>\n                </div>\n            <div class=\"cookie-category__body body\">\n                <p>${element.description}</p>\n            </div>\n            </div>\n            `\n            categoriesBlocks += block;\n        });\n        return categoriesBlocks;\n\n    }\n\n    generateModal() {\n        return `\n        <div class=\"c-cookies-config-modal\">\n        <div class=\"modal__container\" id=\"modal-container\">\n          <div class=\"modal__content\">\n            <div class=\"modal__close close-modal\" title=\"Close\">\n              <img class=\"close-modal-img\" src=\"images/content/close.svg\" alt=\"Webpack 5 Template Boilerplate\">\n            </div>\n    \n            <img src=\"assets/img/star-trophy.png\" alt=\"\" class=\"modal__img\">\n    \n            <h1 class=\"modal__title\">ConfiguraciÃ³n de cookies</h1>\n            <p class=\"modal__description\">Configura aquÃ­ tus cookies.</p>\n            <div class=\"modal__cookie-categories\">\n                ${this.generateCategoriesBlocks()}\n            </div>\n    \n            <div class=\"modal__footer\">\n              <button class=\"modal__button modal__button-width modal__button-accept-all\">\n                Aceptar todas\n              </button>\n    \n              <button class=\"modal__button-link close-modal modal__button-save-btn\">\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n        `;\n    }\n\n}\n\nexport interface ModalOptions {\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n    },\n    saveButton: {\n        text: string,\n        show: boolean,\n    },\n    closeButton: {\n        text: string,\n        show: boolean,\n    },\n}"],"names":["Utils","ScriptType","encode","str","window","btoa","decode","a","atob","isHTML","RegExp","prototype","test","bind","match","wrapString","tag","deepEqual","x","y","_this","this","ok","Object","keys","tx","length","every","key","compareObjects","b","s","o","entries","sort","map","i","JSON","stringify","objectEquals","obj1","obj2","console","log","JSONstringifyOrder","obj","value","prepareObjectsForComparison","A","parse","B","forEach","element","checked","Banner","cookiesManager","options","banner","injectBanner","setEventListeners","document","querySelector","addEventListener","self","acceptAllButton","settingsButton","modal","show","_proto","generateBanner","getBannerText","getAcceptAllButtonText","undefined","bannerText","text","insertAdjacentHTML","showWall","hideWall","style","display","hideScroll","overflow","showScroll","wall","wallScroll","classList","add","hide","Modal","injectModal","getElementById","remove","querySelectorAll","c","item","injectScripts","hideBanner","saveButton","getOptions","cookieCategories","category","index","generateModal","generateCategoriesBlocks","categoriesBlocks","required","title","disabled","description","CookiesManager","getBanner","modalOptions","acceptAll","configChanged","Error","localStorage","getItem","optionsComparison","getCookiesOptions","createModal","bannerOptions","createBanner","setBanner","getModal","setModal","saveCookieOptions","showModal","showBanner","hideModal","injectScript","src","async","createElement","setAttribute","body","appendChild","init","askOnce","askOnChange","scripts","script","scriptSrc","setItem","base64Options"],"mappings":"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"}