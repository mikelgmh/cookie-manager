{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/Banner.ts","../src/Modal.ts","../src/CookiesManager.ts"],"sourcesContent":["\nexport class Utils {\n    public static encode(str) {\n        return window.btoa(str);\n    }\n    public static decode(a) {\n        return window.atob(a);\n    }\n    private static isHTML(str: string) {\n        var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n\n        // test isHTML regex\n        return str.match(isHTML);\n\n    }\n    public static wrapString(str: string, tag: string) {\n        if (this.isHTML(str)) {\n            return str;\n        }\n        return `<${tag}>${str}</${tag}>`;\n    }\n\n    public static deepEqual(x, y) {\n        const ok = Object.keys, tx = typeof x, ty = typeof y;\n        return x && y && tx === 'object' && tx === ty ? (\n            ok(x).length === ok(y).length &&\n            ok(x).every(key => this.deepEqual(x[key], y[key]))\n        ) : (x === y);\n    }\n\n    public static compareObjects(a, b) {\n        let s = (o) => Object.entries(o).sort().map(i => {\n            if (i[1] instanceof Object) i[1] = s(i[1]);\n            return i\n        })\n        return JSON.stringify(s(a)) === JSON.stringify(s(b))\n    }\n\n    public static objectEquals(obj1, obj2) {\n        const JSONstringifyOrder = obj => {\n            const keys = {};\n            JSON.stringify(obj, (key, value) => {\n                keys[key] = null;\n                return value;\n            });\n            return JSON.stringify(obj, Object.keys(keys).sort());\n        };\n        return JSONstringifyOrder(obj1) === JSONstringifyOrder(obj2);\n    }\n\n    // @audit this is removing te callback functions. Watch out!\n    public static prepareObjectsForComparison(obj1, obj2) {\n        var A = JSON.parse(JSON.stringify(obj1));\n        var B = JSON.parse(JSON.stringify(obj2));\n\n\n        A.forEach(element => {\n            element.checked = true;\n        });\n        B.forEach(element => {\n            element.checked = true;\n        });\n        return { A, B }\n    }\n\n    public static mergeRecursively(obj1, obj2) {\n        for (var p in obj2) {\n            try {\n                // Property in destination object set; update its value.\n                if (obj2[p].constructor == Object) {\n                    obj1[p] = this.mergeRecursively(obj1[p], obj2[p]);\n                } else {\n                    obj1[p] = obj2[p];\n                }\n            } catch (e) {\n                // Property in destination object not set; create it and set its value.\n                obj1[p] = obj2[p];\n            }\n        }\n        return obj1;\n    }\n}","import { Modal } from \"./Modal\";\nimport { Utils } from './utils';\nimport { CookiesManager } from './CookiesManager';\n\nexport class Banner {\n    private options: BannerOptions;\n    private banner: string;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: BannerOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        if (cookiesManager.getOptions().bannerOptions.inject) {\n            this.injectBanner();\n        }\n        if (cookiesManager.getOptions().bannerOptions.injectWall) {\n            this.injectWall();\n        }\n        this.setEventListeners();\n    }\n\n    public setEventListeners() {\n        try {\n            let self = this;\n            // Accept all button\n            document.querySelector(\".cm-banner-accept-all-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.acceptAllButton();\n                self.options.acceptAllButton.onClick();\n            });\n\n            // Reject all button\n            document.querySelector(\".cm-banner-reject-all-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.acceptAllButton(false);\n                self.options.rejectAllButton.onClick();\n            });\n\n            // Config button\n            document.querySelector(\".cm-banner-config-btn\")!.addEventListener(\"click\", function () {\n                self.cookiesManager.showModal();\n                self.options.settingsButton.onClick();\n            });\n        } catch (error) {\n            console.error(\"Can't set the event listener for the cookies banner. Can't find the HTML elements.\")\n        }\n\n    }\n\n\n\n\n    private generateBanner() {\n        return `\n                <div class=\"c-cookies-config-banner\">\n                    <div class=\"banner-container\">\n                        ${this.getBannerText()}\n                        <div class=\"banner-container__buttons\">\n                            ${this.getRejectAllButton()}\n                            ${this.getAcceptAllButton()}\n                            ${this.getSettingsButton()}\n                        </div>\n                    </div>\n                </div> \n                `;\n    }\n\n    getAcceptAllButton() {\n        return this.options.acceptAllButton.show ? `<button class=\"banner-container__button banner-container__accept-all-btn cm-banner-accept-all-btn\">${this.options.acceptAllButton.text}</button>` : \"\";\n    }\n    getRejectAllButton() {\n        return this.options.rejectAllButton.show ? `<button class=\"banner-container__button banner-container__reject-all-btn cm-banner-reject-all-btn\">${this.options.rejectAllButton.text}</button>` : \"\";\n    }\n    getSettingsButton() {\n        return this.options.settingsButton.show ? `<button class=\"banner-container__button-link banner-container__config-btn cm-banner-config-btn\">${this.options.settingsButton.text}</button>` : \"\";\n    }\n\n    private getBannerText() {\n        return Utils.wrapString(this.options.bannerText, \"p\");\n    }\n\n    private injectWall() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateWall());\n            }\n        } catch (error) {\n            console.error(\"Couldn't inject the wall.\");\n        }\n    }\n\n    public injectBanner() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateBanner());\n            }\n        } catch (error) {\n            console.error(\"Couldn't inject the banner.\");\n        }\n    }\n\n    private generateWall() {\n        const blur = this.options.wallBlur ? \"c-cookies-config-wall--blurred\" : \"\";\n        return `<div class=\"c-cookies-config-wall ${blur}\"></div>`;\n    }\n\n    public showWall() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-wall\")!.classList.add(\"wall-show\");\n        } catch (error) {\n            console.error(\"Couldn't apply the background wall.\")\n        }\n    }\n\n    public hideWall() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-wall\")!.classList.remove(\"wall-show\");\n        } catch (error) {\n            console.error(\"Unable to hide the background wall.\")\n        }\n    }\n\n    public hideScroll() {\n        try {\n            document.querySelector(\"body\")!.style.overflow = \"hidden\";\n            document.querySelector(\"html\")!.style.overflow = \"hidden\";\n        } catch (error) {\n            console.error(\"Unable to hide the scroll.\")\n        }\n    }\n\n    public showScroll() {\n        try {\n            document.querySelector(\"body\")!.style.overflow = \"auto\";\n            document.querySelector(\"html\")!.style.overflow = \"auto\";\n        } catch (error) {\n            console.error(\"Unable to show the scroll.\")\n        }\n    }\n\n    public show() {\n        if (this.options.wall) {\n            this.showWall();\n        }\n        if (!this.options.wallScroll) {\n            this.hideScroll();\n        }\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-banner .banner-container\")!.classList.add(\"show-banner\");\n        } catch (error) {\n            console.error(\"Unable to show the banner.\")\n        }\n    }\n    public hide() {\n        try {\n            document.querySelector<HTMLElement>(\".c-cookies-config-banner\")!.style.display = \"none\";\n        } catch (error) {\n            console.error(\"Unable to hide the banner.\")\n        }\n        this.hideWall();\n        this.showScroll();\n    }\n\n}\n\n\n\n\nexport interface BannerOptions {\n    bannerText: string;\n    wall: boolean,\n    injectWall: boolean,\n    wallScroll: boolean,\n    wallBlur: boolean,\n    inject: boolean,\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    settingsButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    acceptRequiredOnlyButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    rejectAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n}\n","import { CookieCategory, CookiesManager } from './CookiesManager';\nexport class Modal {\n\n    private options: ModalOptions;\n    private cookiesManager: CookiesManager;\n\n    constructor(cookiesManager: CookiesManager, options: ModalOptions) {\n        this.cookiesManager = cookiesManager;\n        this.options = options;\n        if (cookiesManager.getOptions().modalOptions.inject) {\n            this.injectModal();\n        }\n        this.setEventListeners();\n        this.updateSwitchesStatus();\n    }\n\n\n    async show() {\n        try {\n\n            const modal = document.querySelector(\".c-cookies-config-modal\");\n            modal!.classList.add(this.options.showModalClass);\n            await new Promise(r => setTimeout(r, 10)); // This is to make the show animation work\n            // Toggle accordions after showing modal\n            var acc = document.getElementsByClassName(\"cm-accordion\");\n            var i;\n            var self = this;\n            for (i = 0; i < acc.length; i++) {\n                if (acc[i].classList.contains(\"cm-active-on-load\")) {\n                    acc[i].classList.remove(\"cm-active-on-load\");\n                    await new Promise(r => setTimeout(r, 100)); // This is to make the show animation work\n                    self.toggleAccordion(acc[i]);\n                }\n            }\n\n            const modalContainer = document.getElementById(\"modal-container\");\n            modalContainer!.classList.add(this.options.showModalClass);\n            // Hide body scroll\n            this.cookiesManager.getBanner().hideScroll();\n        } catch (error) {\n            console.error(\"Could not show cookie modal.\")\n            console.error(error)\n        }\n    }\n    hide(self?: Modal) { // Destucted object, so we can access this context\n        const modalContainer = document.getElementById('modal-container');\n        modalContainer!.classList.remove(this.options.showModalClass);\n\n        // If banner is not shown, show scroll\n        const bannerContainer = document.querySelector(\".c-cookies-config-banner .banner-container\");\n        if (bannerContainer?.classList.contains(\"show-banner\") == false) {\n            this.cookiesManager.getBanner().showScroll();\n        } else {\n            // If the banner is shown, check if the scroll was active. If it was, show the scroll on modal close.\n            const wallScroll = this.cookiesManager.getOptions().bannerOptions.wallScroll;\n            if (wallScroll) {\n                this.cookiesManager.getBanner().showScroll();\n            }\n        }\n    }\n\n    setEventListeners() {\n\n        try {\n            var self = this;\n            // Modal close button\n            const closeBtn = document.querySelectorAll('.close-modal')\n            closeBtn.forEach(c => c.addEventListener('click', () => {\n                this.hide(self);\n            }))\n\n            // Accept all button\n            document.querySelector('.cm-modal-accept-all')!.addEventListener('click', function () {\n                self.cookiesManager.acceptAllButton();\n                self.cookiesManager.getOptions().modalOptions.acceptAllButton.onClick();\n            });\n\n            // Reject all button\n            document.querySelector('.cm-modal-reject-all')!.addEventListener('click', function () {\n                self.cookiesManager.acceptAllButton(false);\n                self.cookiesManager.getOptions().modalOptions.rejectAllButton.onClick();\n            });\n\n            // Save button\n            document.querySelector('.cm-modal-save')!.addEventListener('click', function () {\n                self.cookiesManager.injectScripts();\n                self.cookiesManager.hideBanner();\n                self.cookiesManager.saveButton();\n                self.cookiesManager.callIndividualCallbacks();\n                self.cookiesManager.getOptions().modalOptions.saveButton.onClick();\n            });\n\n            // Switches\n            this.cookiesManager.getOptions().cookieCategories.forEach((category: CookieCategory, index) => {\n                var checkbox = document.querySelector(`.cm-switch-${index}`)!;\n                const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n                checkbox.addEventListener('change', function () {\n                    if (this.checked) {\n                        category.checked = true;\n                        self.toggleSwitch(index, true);\n                    } else {\n                        category.checked = false;\n                        self.toggleSwitch(index, false);\n                    }\n                });\n            });\n\n            // Set accordion toggle on click\n            var acc = document.getElementsByClassName(\"cm-accordion\");\n            var i;\n            var self = this;\n            for (i = 0; i < acc.length; i++) {\n                acc[i].addEventListener(\"click\", function () {\n                    self.toggleAccordion(this);\n                });\n            }\n\n\n        } catch (error) {\n            console.error(\"Could not set event listeners for cookie modal.\")\n        }\n    }\n\n    private updateSwitchDisabledStatus(toggleIndex: number, required: boolean) {\n        try {\n            const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n            const checkboxInput = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.cm-switch-${toggleIndex}`)!;\n            const checkboxSpan = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.slider`)!;\n            const checkboxLabel = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`label.switch`)!;\n            if (required) {\n                checkboxInput.setAttribute(\"disabled\", \"\")\n                checkboxSpan.classList.add(\"disabled\");\n                checkboxLabel.classList.add(\"disabled\");\n            } else {\n                checkboxInput.removeAttribute(\"disabled\");\n                checkboxSpan.classList.remove(\"disabled\");\n                checkboxLabel.classList.remove(\"disabled\");\n            }\n        } catch (error) {\n            console.error(`Could not change the disabled status from switch cm-switch-${toggleIndex}. Do you have equal switches and cookieCategories? If cm-switch-${toggleIndex} does not exist in your DOM, probably not.`)\n\n        }\n    }\n\n    private toggleSwitch(toggleIndex: number, checked: boolean) {\n        try {\n            const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n            const checkboxInput = cookieCategoryElements[toggleIndex].querySelector<HTMLInputElement>(`.cm-switch-${toggleIndex}`)!;\n            if (!checked) {\n                checkboxInput.removeAttribute(\"checked\");\n            } else {\n                checkboxInput.setAttribute(\"checked\", \"\")\n            }\n            checkboxInput.checked = checked;\n        } catch (error) {\n            console.error(`Could not toggle the switch cm-switch-${toggleIndex}. Do you have equal switches and cookieCategories? If cm-switch-${toggleIndex} does not exist in your DOM, probably not.`)\n        }\n    }\n\n    private async toggleAccordion(element) {\n        element.classList.toggle(\"cm-active\");\n        var panel = element.nextElementSibling;\n        if (panel.style.maxHeight) {\n            panel.style.maxHeight = null;\n        } else {\n            panel.style.maxHeight = panel.scrollHeight + \"px\";\n        }\n    }\n\n    public injectModal() {\n        try {\n            if (document.querySelector(\"body\") != null) {\n                document.querySelector(\"body\")!.insertAdjacentHTML(\"afterend\", this.generateModal());\n            }\n        } catch (error) {\n            console.error(\"Could not inject cookie modal.\");\n        }\n    }\n\n    // If we're not injecting the HTML, we need to update the HTML manually after the page is loaded.\n    public updateSwitchesStatus() {\n        //const cookieCategoryElements = document.querySelectorAll(\".c-cookies-config-modal .cookie-category\");\n        let cookieCategories = this.cookiesManager.getOptions().cookieCategories;\n        cookieCategories.forEach((cookieCategory, index) => {\n            try {\n                this.toggleSwitch(index, cookieCategory.checked)\n                this.updateSwitchDisabledStatus(index, cookieCategory.required)\n            } catch (error) {\n                console.error(\"You have more cookieCategories defined in javascript than in your HTML. Please, use the same number of cookieCategories.\")\n            }\n        });\n    }\n\n    private generateCategoriesBlocks() {\n        let categoriesBlocks = \"\";\n        let cookieCategories = this.cookiesManager.getOptions().cookieCategories;\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            cookieCategories = this.cookiesManager.getCookiesOptions();\n        }\n        cookieCategories.forEach((element, index) => {\n            const disabled = element.required ? \"disabled\" : \"\";\n            const checked = element.checked ? \"checked\" : \"\";\n            const accordionClass = element.accordion.enable ? \"cm-accordion\" : \"\";\n            const accordionPanel = element.accordion.enable ? \"cm-panel\" : \"\";\n            const activeAccordion = element.accordion.active ? \"cm-active-on-load\" : \"\";\n            const accordionChevron = element.accordion.enable ? \"<div class='cc-header__left'></div>\" : \"\";\n            const boxedHeader = element.boxedHeader ? \"cm-boxed\" : \"\";\n            const boxedBody = element.boxedBody ? \"cookie-category__body--boxed\" : \"\";\n            // const boxedHeaderMArgin = element.accordion.active ? \"\" : \"no-chevron\";\n            const block = `\n            <div class=\"cookie-category\">\n                <div class=\"cookie-category__header cc-header ${accordionClass} ${boxedHeader} ${activeAccordion}\">\n                    ${accordionChevron}\n                    <div class=\"cc-header__right\">\n                        <div class=\"header__title\">\n                            ${element.title}\n                        </div>\n                        <div class=\"header__switch\">\n                            <label class=\"switch ${disabled}\">\n                                <input ${disabled} ${checked} class=\"cm-switch-${index}\" type=\"checkbox\">\n                                <span class=\"slider round ${disabled}\"></span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"cookie-category__body body ${boxedBody} ${accordionPanel}\">\n                    <p>${element.description}</p>\n                </div>\n            </div>\n            `;\n            categoriesBlocks += block;\n        });\n        return categoriesBlocks;\n\n    }\n\n    getCloseButton() {\n        return this.options.closeButton.show ? `<div class=\"modal__close close-modal\" title=\"Close\"><div class=\"close-modal-img\"></div></div>` : \"\";\n    }\n    getAcceptAllButton() {\n        return this.options.acceptAllButton.show ? `<button class=\"modal__button modal__button-width cm-modal-accept-all footer__button-accept-all\">${this.options.acceptAllButton.text}</button>` : \"\";\n    }\n    getRejectAllButton() {\n        return this.options.rejectAllButton.show ? `<button class=\"modal__button modal__button-width cm-modal-reject-all footer__button-reject-all\">${this.options.rejectAllButton.text}</button>` : \"\";\n    }\n    getSaveButton() {\n        return this.options.saveButton.show ? ` <button class=\"modal__button-link close-modal cm-modal-save footer__button-save-btn\"> ${this.options.saveButton.text} </button>` : \"\";\n    }\n\n    generateModal() {\n        return `\n        <div class=\"c-cookies-config-modal\">\n        <div class=\"modal__container\" id=\"modal-container\">\n          <div class=\"modal__content\">\n            ${this.getCloseButton()}\n            <div class=\"modal__title\">${this.options.title}</div>\n            <p class=\"modal__description\">${this.options.description}</p>\n            <div class=\"modal__cookie-categories\">\n                ${this.generateCategoriesBlocks()}\n            </div>\n    \n            <div class=\"modal__footer\">\n             ${this.getRejectAllButton()}\n             ${this.getAcceptAllButton()}\n             ${this.getSaveButton()}\n            </div>\n          </div>\n        </div>\n      </div>\n        `;\n    }\n\n}\n\nexport interface ModalOptions {\n    inject: boolean,\n    title: string,\n    description: string,\n    showModalClass: string,\n    acceptAllButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    rejectAllButton: {\n        show: boolean,\n        text: string,\n        onClick: Function,\n    },\n    saveButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n    closeButton: {\n        text: string,\n        show: boolean,\n        onClick: Function,\n    },\n}","\nimport { Banner, BannerOptions } from \"./Banner\";\nimport { ModalOptions, Modal } from './Modal';\nimport \"./scss/styles.scss\";\nimport { Utils } from './utils';\n\ninterface cookieCatergoryCallbackInterface {\n    (CookieCategory: CookieCategory): void;\n}\nexport class CookiesManager {\n\n    // var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\n    private modalOptions: Options;\n    private banner: Banner;\n    private modal: Modal;\n    private acceptAll: boolean = false;\n    private configChanged: boolean = false;\n    private onCookieCategoryChange: cookieCatergoryCallbackInterface;\n\n\n    public getBanner(): Banner {\n        return this.banner;\n    }\n\n    public setBanner(banner: Banner): void {\n        this.banner = banner;\n    }\n\n    public getModal(): Modal {\n        return this.modal;\n    }\n\n    public setModal(modal: Modal): void {\n        this.modal = modal;\n    }\n\n    public getOptions(): Options {\n        return this.modalOptions;\n    }\n\n    public on(listener, callback: cookieCatergoryCallbackInterface) {\n        if (listener == \"onCookieCategoryChange\") {\n            this.onCookieCategoryChange = callback;\n        }\n    }\n\n    constructor(options: Options) {\n        if (options == null) {\n            throw new Error(\"Options for CookiesManager cannot be null.\");\n        } else {\n            if (options.cookieCategories == null) {\n                throw new Error(\"You should provide at least one cookie category\");\n            }\n            // Set all cookie categories as checked by default. Set default value for cookie category\n            const mergedCategories = new Array<CookieCategory>;\n            options.cookieCategories.forEach(category => {\n                //category.checked = true; // Dont set checked to true. Set checked if checked was set\n                mergedCategories.push(Utils.mergeRecursively(this.getDefaultCookieCategoryOptions(), category));\n            });\n            options.cookieCategories = mergedCategories;\n            // Merge the default options with user options\n            const clonedCategories: CookieCategory[] = options.cookieCategories;\n            options = Utils.mergeRecursively(this.getDefaultOptions(), options);\n            this.modalOptions = options;\n            this.constructorInitializationFunction(options, clonedCategories);\n        }\n    }\n\n    private constructorInitializationFunction(options, clonedCategories: CookieCategory[]) {\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) { // If there's already configuration saved\n            // Prepare the options to compare them.\n            // @audit be careful, this function is comparing two strings. The callback functions are being removed, so we need to set them below.\n            var optionsComparison = Utils.prepareObjectsForComparison(this.modalOptions.cookieCategories, this.getCookiesOptions());\n            // Check if the options in localStorage and the options from the constructor are the same\n            if (Utils.objectEquals(optionsComparison.A, optionsComparison.B)) {\n                // If the options are the same, just inject the scripts\n                this.modalOptions.cookieCategories = this.getCookiesOptions();\n                // @audit-ok We need to set the categories events again, as the callback functions were removed.\n                this.modalOptions.cookieCategories.forEach((cookieCategory, index) => {\n                    cookieCategory.events = clonedCategories[index].events;\n                });\n\n            } else {\n                localStorage.removeItem(\"cookiesManagerOptions\");\n                // If the options are different, set the configChanged to true\n                // We are in the constructor. By setting this to true, it might show the banner and modal if the user has set askOnChange to true\n                this.configChanged = true;\n            }\n        }\n\n        // Generate modal\n        if (options.modalOptions != null) {\n            this.createModal(options.modalOptions);\n        }\n\n        if (options.bannerOptions != null) {\n            this.createBanner(options.bannerOptions);\n        }\n    }\n\n    public setEventListeners() {\n        this.modal.setEventListeners();\n        this.banner.setEventListeners();\n    }\n\n    public createBanner(options: BannerOptions) {\n        this.banner = new Banner(this, options);\n        return this.banner;\n    }\n    public createModal(options: ModalOptions) {\n        this.modal = new Modal(this, options);\n        return this.modal;\n    }\n\n    public setCookies(): void {\n        this.modalOptions.cookieCategories.forEach(category => {\n            category.events.setCookiesOnChange.forEach(cookie => {\n                let cookieValue;\n                if (category.checked) {\n                    cookieValue = cookie.valueOnAccept;\n                    this.setCookie(cookie.cookieName, cookieValue, cookie.expirationDays, \"/\");\n                } else {\n                    cookieValue = cookie.valueOnReject;\n                    if (this.getOptions().askAgainIfRejectedAfterDays != -1) {\n                        this.setCookie(cookie.cookieName, cookieValue, this.getOptions().askAgainIfRejectedAfterDays, \"/\");\n                    } else {\n                        this.setCookie(cookie.cookieName, cookieValue, cookie.expirationDays, \"/\");\n                    }\n                }\n\n            })\n        });\n    }\n\n    public setCookie(cookieName: string, cookieValue: string, expDays = 400, path = '/') {\n        try {\n            document.cookie = cookieName + '=' + encodeURIComponent(cookieValue) + '; max-age=' + (3600 * (24 * expDays)) + '; path=' + path\n        } catch (error) {\n            console.error(`Error setting cookie: ${error}`)\n        }\n    }\n\n    public getCookie(cookieName) {\n        let cookie = {};\n        document.cookie.split(';').forEach(function (el) {\n            let [key, value] = el.split('=');\n            cookie[key.trim()] = value;\n        })\n        return cookie[cookieName];\n    }\n\n    public acceptAllButton(acceptedAll = true) {\n        this.getOptions().cookieCategories.forEach((cookieCategory: CookieCategory) => {\n            if (cookieCategory.required && acceptedAll == false) {\n                cookieCategory.checked = true;\n            } else {\n                cookieCategory.checked = acceptedAll;\n            }\n        })\n        this.modal.updateSwitchesStatus();\n        this.acceptAll = true;\n        this.modal.hide();\n        this.banner.hide();\n        this.injectScripts();\n        this.saveCookieOptions();\n        this.setCookies();\n        this.callIndividualCallbacks();\n    }\n\n    public showModal() {\n        this.modal.show();\n    }\n\n    public showBanner() {\n        this.banner.show();\n    }\n\n    public hideBanner() {\n        this.banner.hide();\n    }\n\n    public hideModal() {\n        this.modal.hide();\n    }\n\n    public callIndividualCallbacks() {\n        this.modalOptions.cookieCategories.forEach(category => {\n            if (category.checked || this.acceptAll) {\n                category.events.onAccept();\n            } else if (!category.checked) {\n                category.events.onReject();\n            }\n        });\n    }\n\n    private injectScript(src: string, async = false) {\n        var s = document.createElement('script');\n        s.setAttribute('src', src);\n        s.async = async;\n        document.body.appendChild(s);\n    }\n\n    private injectGTM(gtmCode: string) {\n        try {\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                const f = d.getElementsByTagName(s)[0];\n                const j = d.createElement(s) as HTMLInputElement;\n                const\n                    dl = l != 'dataLayer' ? `&l=${l}` : '';\n                //j.async = true;\n                j.src = `https://www.googletagmanager.com/gtm.js?id=${i}${dl}`;\n                f.parentNode!.insertBefore(j, f);\n            }(window, document, 'script', 'dataLayer', gtmCode));\n            (window as any).dataLayer = (window as any).dataLayer || [];\n        } catch (error) {\n            console.error(\"Couldn't inject GTM.\")\n        }\n    }\n\n    public async init(banner: boolean, modal: boolean) {\n        if (this.modalOptions.askOnce) {\n            if (localStorage.getItem(\"cookiesManagerOptions\") == null || this.configChanged) {\n                await this.initShow(banner, modal)\n            } else {\n                let initDone = false;\n                const cookieOptions: CookieCategory[] = this.getCookiesOptions(); // Cookie options from localStorage\n                // Check for the cookies\n                for (let [categoryIndex, category] of this.modalOptions.cookieCategories.entries()) {\n                    if (initDone) break;\n                    for (let [cookieObjectIndex, cookieObject] of category.events.setCookiesOnChange.entries()) {\n\n                        // If the cookie exists\n                        if (this.getCookie(cookieObject.cookieName)) {\n                            // If the cookie has different values than the set ones, ask again\n                            if (![cookieObject.valueOnAccept.toString(), cookieObject.valueOnReject.toString()].includes(this.getCookie(cookieObject.cookieName))) {\n                                this.initShow(banner, modal);\n                                initDone = true;\n                                break;\n                            } else {\n                                // Los valores son correctos. Comprobar si el usuario ha cambiado la cookie desde devTools\n                                // Probablemente haya que meter esto en try catch\n                                if (category.checked) {\n                                    const savedLocalStorageCookieValue = cookieOptions[categoryIndex].events.setCookiesOnChange[cookieObjectIndex].valueOnAccept; // Valor de la cookie en localstorage\n                                    const realCookieValue = this.getCookie(cookieOptions[categoryIndex].events.setCookiesOnChange[cookieObjectIndex].cookieName)\n                                    if (savedLocalStorageCookieValue.toString() != realCookieValue) {\n                                        this.initShow(banner, modal);\n                                        break;\n                                    }\n                                }\n\n                            }\n                        } else {\n                            this.initShow(banner, modal)\n                            initDone = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            await this.initShow(banner, modal)\n        }\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            this.injectScripts();\n            this.callIndividualCallbacks();\n        }\n    }\n\n    public async initShow(banner: boolean, modal: boolean) {\n        if (this.modalOptions.delay > 0) {\n            await new Promise(r => setTimeout(r, this.modalOptions.delay)); // This is to make the show animation work\n        }\n        if (banner) {\n            this.showBanner();\n        }\n        if (modal) {\n            this.showModal();\n        }\n    }\n\n    public injectScripts() {\n        try {\n\n            this.modalOptions.cookieCategories.forEach(category => {\n                if (this.onCookieCategoryChange != null) {\n                    this.onCookieCategoryChange(category);\n                }\n                if (category.checked || this.acceptAll) {\n                    category.scripts.forEach(script => {\n                        if (script[\"type\"] == ScriptType.STANDARD || script[\"type\"] == null) {\n                            if (script[\"scriptSrc\"] != null) {\n                                this.injectScript(script[\"scriptSrc\"], script[\"async\"])\n                            }\n                        } else {\n                            if (script[\"gtmCode\"] != null) {\n                                this.injectGTM(script[\"gtmCode\"]);\n                            } else {\n                                throw new Error(\"You should provide a gtmCode for the script\");\n                            }\n                        }\n                    });\n                }\n            });\n        } catch (error) {\n            console.error(`Couldn't inject scripts: ${error}`)\n        }\n    }\n\n    saveButton() {\n        this.saveCookieOptions();\n        this.setCookies();\n        this.callIndividualCallbacks();\n    }\n\n    saveCookieOptions() {\n        const base64Options = Utils.encode(JSON.stringify(this.modalOptions.cookieCategories));\n        localStorage.setItem(\"cookiesManagerOptions\", base64Options);\n    }\n\n    getCookiesOptions(): any {\n        if (localStorage.getItem(\"cookiesManagerOptions\") != null) {\n            return JSON.parse(Utils.decode(localStorage.getItem(\"cookiesManagerOptions\")));\n        }\n        return {};\n    }\n\n    private getDefaultCookieCategoryOptions(): CookieCategory {\n        return {\n            title: \"Cookie Category Example\",\n            description: \"Cookie category description\",\n            required: false,\n            id: \"\",\n            checked: true,\n            events: {\n                onAccept: () => { },\n                onReject: () => { },\n                setCookiesOnChange: []\n            },\n            accordion: {\n                enable: false,\n                enableOnDescriptionLength: 45,\n                active: false,\n            },\n            boxedHeader: false,\n            boxedBody: false,\n            scripts: []\n        }\n    }\n\n    private getDefaultOptions(): Options {\n        return {\n            askOnce: true,\n            askAgainIfRejectedAfterDays: -1,\n            delay: 0,\n            askOnChange: true,\n            initOnDomContentLoaded: true,\n            modalOptions: {\n                title: \"Cookie settings\",\n                description: \"Change the settings for the cookies here.\",\n                inject: true,\n                showModalClass: \"show-modal\",\n                acceptAllButton: {\n                    text: 'Accept all',\n                    show: true,\n                    onClick: () => { },\n                },\n                rejectAllButton: {\n                    text: 'Reject all',\n                    show: true,\n                    onClick: () => { },\n                },\n                saveButton: {\n                    text: 'Save',\n                    show: true,\n                    onClick: () => { },\n                },\n                closeButton: {\n                    text: 'Close',\n                    show: true,\n                    onClick: () => { },\n                },\n            },\n            bannerOptions: {\n                inject: true,\n                injectWall: true,\n                wall: true,\n                wallScroll: true,\n                wallBlur: false,\n                bannerText: 'This website uses cookies to ensure you get the best experience on our website.',\n                acceptAllButton: {\n                    text: 'Accept all',\n                    show: true,\n                    onClick: () => { },\n                },\n                settingsButton: {\n                    text: 'Settings',\n                    show: true,\n                    onClick: () => { },\n                },\n                acceptRequiredOnlyButton: {\n                    text: 'Configuración',\n                    show: false,\n                    onClick: () => { },\n                },\n                rejectAllButton: {\n                    text: 'Rechazar todo',\n                    show: true,\n                    onClick: () => { },\n                }\n            },\n            cookieCategories: [],\n        }\n    }\n\n\n\n}\nexport interface Events {\n    onAccept: Function,\n    onReject: Function,\n    setCookiesOnChange: Array<CookieObject>,\n}\n\nexport interface CookieObject {\n    cookieName: string,\n    valueOnAccept: string | number,\n    valueOnReject: string | number,\n    expirationDays: number,\n}\n\nexport interface Options {\n    cookieCategories: Array<CookieCategory>,\n    initOnDomContentLoaded: boolean,\n    askAgainIfRejectedAfterDays: number,\n    bannerOptions: BannerOptions,\n    modalOptions: ModalOptions,\n    askOnce: boolean,\n    askOnChange: boolean,\n    delay: number,\n}\n\nexport interface CookieCategory {\n    title: string,\n    id: string,\n    description: string,\n    required: boolean,\n    checked: boolean,\n    events: Events,\n    accordion: Accordion,\n    boxedHeader: boolean,\n    boxedBody: boolean,\n    scripts: [\n        {\n            type: ScriptType,\n            gtmCode: string,\n            scriptSrc: string,\n            async: boolean,\n        }\n    ] | []\n}\n\nexport interface Accordion {\n    enable: boolean,\n    enableOnDescriptionLength: number,\n    active: boolean,\n}\n\nexport enum ScriptType {\n    GTM,\n    STANDARD\n}"],"names":["Utils","encode","str","window","btoa","decode","a","atob","isHTML","RegExp","prototype","test","bind","match","wrapString","tag","this","deepEqual","x","y","_this","ok","Object","keys","tx","length","every","key","compareObjects","b","s","o","entries","sort","map","i","JSON","stringify","objectEquals","obj1","obj2","JSONstringifyOrder","obj","value","prepareObjectsForComparison","A","parse","B","forEach","element","checked","mergeRecursively","p","constructor","e","Banner","cookiesManager","options","banner","getOptions","bannerOptions","inject","injectBanner","injectWall","setEventListeners","_proto","self","document","querySelector","addEventListener","acceptAllButton","onClick","rejectAllButton","showModal","settingsButton","error","console","generateBanner","getBannerText","getRejectAllButton","getAcceptAllButton","getSettingsButton","show","text","bannerText","insertAdjacentHTML","generateWall","blur","wallBlur","showWall","classList","add","hideWall","remove","hideScroll","style","overflow","showScroll","wall","wallScroll","hide","display","pact","_Pact","_settle","state","v","then","observer","onFulfilled","onRejected","result","callback","_isSettledPact","thenable","Modal","ScriptType","modalOptions","injectModal","updateSwitchesStatus","_this2","Promise","resolve","showModalClass","r","setTimeout","_temp3","getElementById","getBanner","acc","getElementsByClassName","_temp2","update","body","_for","_temp","contains","toggleAccordion","_catch","bannerContainer","_this3","querySelectorAll","c","injectScripts","hideBanner","saveButton","callIndividualCallbacks","cookieCategories","category","index","checkbox","toggleSwitch","updateSwitchDisabledStatus","toggleIndex","required","cookieCategoryElements","checkboxInput","checkboxSpan","checkboxLabel","setAttribute","removeAttribute","toggle","panel","nextElementSibling","maxHeight","scrollHeight","reject","generateModal","_this4","cookieCategory","generateCategoriesBlocks","categoriesBlocks","localStorage","getItem","getCookiesOptions","disabled","accordionClass","accordion","enable","boxedHeader","active","title","boxedBody","accordionPanel","description","getCloseButton","closeButton","getSaveButton","CookiesManager","modal","acceptAll","configChanged","onCookieCategoryChange","Error","mergedCategories","Array","push","getDefaultCookieCategoryOptions","clonedCategories","getDefaultOptions","constructorInitializationFunction","setBanner","getModal","setModal","on","listener","optionsComparison","events","removeItem","createModal","createBanner","setCookies","setCookiesOnChange","cookie","cookieValue","setCookie","cookieName","valueOnAccept","expirationDays","valueOnReject","askAgainIfRejectedAfterDays","expDays","path","encodeURIComponent","getCookie","split","el","_el$split","trim","acceptedAll","saveCookieOptions","showBanner","hideModal","onAccept","onReject","injectScript","src","async","createElement","appendChild","injectGTM","gtmCode","w","d","l","Date","getTime","event","f","getElementsByTagName","j","parentNode","insertBefore","dataLayer","init","_temp4","_this5","_temp5","askOnce","initShow","_step","initDone","cookieOptions","_iterator","_createForOfIteratorHelperLoose","done","categoryIndex","_step$value","_step2","_iterator2","cookieObjectIndex","cookieObject","_step2$value","toString","includes","savedLocalStorageCookieValue","realCookieValue","_temp6","_temp9","_this7","_temp10","delay","_this8","scripts","script","STANDARD","base64Options","setItem","id","enableOnDescriptionLength","askOnChange","initOnDomContentLoaded","acceptRequiredOnlyButton"],"mappings":"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"}