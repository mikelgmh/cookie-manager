{"code":"export class Modal {\r\n    options;\r\n    cookiesManager;\r\n    constructor(cookiesManager, options) {\r\n        this.cookiesManager = cookiesManager;\r\n        this.options = options;\r\n        this.injectModal();\r\n        this.setEventListeners();\r\n    }\r\n    show() {\r\n        const modalContainer = document.getElementById(\"modal-container\");\r\n        modalContainer.classList.add('show-modal');\r\n        // Hide body scroll\r\n        document.querySelector(\"body\").style.overflow = \"hidden\";\r\n    }\r\n    hide() {\r\n        const modalContainer = document.getElementById('modal-container');\r\n        modalContainer.classList.remove('show-modal');\r\n    }\r\n    setEventListeners() {\r\n        var self = this;\r\n        // Close modal\r\n        const closeBtn = document.querySelectorAll('.close-modal');\r\n        closeBtn.forEach(c => c.addEventListener('click', this.hide));\r\n        // Accept all btn\r\n        // Estos listeners deberían settearse en CookiesManager probablemente, porque va a haber que llamar métodos de ahí. O eso o Modal debería tener la instancia de CookiesManager.\r\n        const acceptAllBtn = document.querySelectorAll('.modal__button-accept-all');\r\n        acceptAllBtn.forEach(function (item) {\r\n            item.addEventListener('click', function () {\r\n                self.cookiesManager.acceptAllButton();\r\n            });\r\n        });\r\n        // Save button\r\n        const saveButton = document.querySelectorAll('.modal__button-save-btn');\r\n        saveButton.forEach(function (item) {\r\n            item.addEventListener('click', function () {\r\n                self.cookiesManager.injectScripts();\r\n                self.cookiesManager.hideBanner();\r\n                self.cookiesManager.saveButton();\r\n            });\r\n        });\r\n        // Switches\r\n        this.cookiesManager.getOptions().cookieCategories.forEach((category, index) => {\r\n            var checkbox = document.querySelector(`.cm-switch-${index}`);\r\n            checkbox.addEventListener('change', function () {\r\n                if (this.checked) {\r\n                    category.checked = true;\r\n                }\r\n                else {\r\n                    category.checked = false;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    injectModal() {\r\n        if (document.querySelector(\"body\") != null) {\r\n            document.querySelector(\"body\").insertAdjacentHTML(\"afterend\", this.generateModal());\r\n        }\r\n    }\r\n    generateCategoriesBlocks() {\r\n        let categoriesBlocks = \"\";\r\n        this.cookiesManager.getOptions().cookieCategories.forEach((element, index) => {\r\n            const disabled = element.required ? \"disabled\" : \"\";\r\n            const checked = element.required ? \"checked\" : \"\";\r\n            const block = `\n            <div class=\"cookie-category\">\n                <div class=\"cookie-category__header header\">\n                    <h2 class=\"header__title\">\n                    ${element.title}\n                    </h2>\n                    <div class=\"header__switch\">\n                    <label class=\"switch ${disabled}\">\n                        <input ${disabled} checked class=\"cm-switch-${index}\" type=\"checkbox\">\n                        <span class=\"slider round\"></span>\n                    </label>\n                    </div>\n                </div>\n            <div class=\"cookie-category__body body\">\n                <p>${element.description}</p>\n            </div>\n            </div>\n            `;\r\n            categoriesBlocks += block;\r\n        });\r\n        return categoriesBlocks;\r\n    }\r\n    generateModal() {\r\n        return `\n        <div class=\"c-cookies-config-modal\">\n        <div class=\"modal__container\" id=\"modal-container\">\n          <div class=\"modal__content\">\n            <div class=\"modal__close close-modal\" title=\"Close\">\n              <img class=\"close-modal-img\" src=\"images/content/close.svg\" alt=\"Webpack 5 Template Boilerplate\">\n            </div>\n    \n            <img src=\"assets/img/star-trophy.png\" alt=\"\" class=\"modal__img\">\n    \n            <h1 class=\"modal__title\">Configuración de cookies</h1>\n            <p class=\"modal__description\">Configura aquí tus cookies.</p>\n            <div class=\"modal__cookie-categories\">\n                ${this.generateCategoriesBlocks()}\n            </div>\n    \n            <div class=\"modal__footer\">\n              <button class=\"modal__button modal__button-width modal__button-accept-all\">\n                Aceptar todas\n              </button>\n    \n              <button class=\"modal__button-link close-modal modal__button-save-btn\">\n                Guardar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n        `;\r\n    }\r\n}\r\n//# sourceMappingURL=Modal.js.map","references":["/home/mikel/Projects/cookies-banner-micro/src/CookiesManager.ts"],"map":"{\"version\":3,\"file\":\"Modal.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/Modal.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/mikel/Projects/cookies-banner-micro/dist/Modal.d.ts","writeByteOrderMark":false,"text":"import { CookiesManager } from './CookiesManager';\r\nexport declare class Modal {\r\n    private options;\r\n    private cookiesManager;\r\n    constructor(cookiesManager: CookiesManager, options: ModalOptions);\r\n    show(): void;\r\n    hide(): void;\r\n    setEventListeners(): void;\r\n    injectModal(): void;\r\n    private generateCategoriesBlocks;\r\n    generateModal(): string;\r\n}\r\nexport interface ModalOptions {\r\n    acceptAllButton: {\r\n        text: string;\r\n        show: boolean;\r\n    };\r\n    saveButton: {\r\n        text: string;\r\n        show: boolean;\r\n    };\r\n    closeButton: {\r\n        text: string;\r\n        show: boolean;\r\n    };\r\n}\r\n"}}
