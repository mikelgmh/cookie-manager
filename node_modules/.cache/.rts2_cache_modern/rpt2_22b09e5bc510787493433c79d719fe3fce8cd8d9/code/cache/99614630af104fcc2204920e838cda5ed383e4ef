{"code":"import { Banner } from \"./Banner\";\r\nimport { Modal } from './Modal';\r\nimport \"./scss/styles.scss\";\r\nexport class CookiesManager {\r\n    // var isHTML = RegExp.prototype.test.bind(/(<([^>]+)>)/i);\r\n    modalOptions;\r\n    banner;\r\n    modal;\r\n    getBanner() {\r\n        return this.banner;\r\n    }\r\n    setBanner(banner) {\r\n        this.banner = banner;\r\n    }\r\n    getModal() {\r\n        return this.modal;\r\n    }\r\n    setModal(modal) {\r\n        this.modal = modal;\r\n    }\r\n    constructor(options) {\r\n        if (options == null) {\r\n            throw new Error(\"Options cannot be null\");\r\n        }\r\n        else {\r\n            this.modalOptions = options;\r\n        }\r\n    }\r\n    createBanner(options) {\r\n        this.banner = new Banner(options, this);\r\n        return this.banner;\r\n    }\r\n    createModal(options) {\r\n        this.modal = new Modal(options);\r\n        return this.modal;\r\n    }\r\n    acceptAllButton() {\r\n        alert(\"Accepting all!\");\r\n    }\r\n}\r\n//# sourceMappingURL=CookiesManager.js.map","references":["/home/mikel/Projects/cookies-banner-micro/src/Banner.ts","/home/mikel/Projects/cookies-banner-micro/src/Modal.ts"],"map":"{\"version\":3,\"file\":\"CookiesManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/CookiesManager.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,MAAM,EAAiB,MAAM,UAAU,CAAC;AACjD,OAAO,EAAgB,KAAK,EAAE,MAAM,SAAS,CAAC;AAC9C,OAAO,oBAAoB,CAAC;AAC5B,MAAM,OAAO,cAAc;IAEvB,2DAA2D;IACnD,YAAY,CAAU;IACtB,MAAM,CAAS;IACf,KAAK,CAAQ;IAEd,SAAS;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,SAAS,CAAC,MAAc;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,QAAQ,CAAC,KAAY;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAGD,YAAY,OAAgB;QACxB,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC7C;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;SAC/B;IAEL,CAAC;IAGM,YAAY,CAAO,OAAsB;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACM,WAAW,CAAO,OAAqB;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEO,eAAe;QACnB,KAAK,CAAC,gBAAgB,CAAC,CAAA;IAC3B,CAAC;CAEJ\"}","dts":{"name":"/home/mikel/Projects/cookies-banner-micro/dist/CookiesManager.d.ts","writeByteOrderMark":false,"text":"import { Banner, BannerOptions } from \"./Banner\";\r\nimport { ModalOptions, Modal } from './Modal';\r\nimport \"./scss/styles.scss\";\r\nexport declare class CookiesManager {\r\n    private modalOptions;\r\n    private banner;\r\n    private modal;\r\n    getBanner(): Banner;\r\n    setBanner(banner: Banner): void;\r\n    getModal(): Modal;\r\n    setModal(modal: Modal): void;\r\n    constructor(options: Options);\r\n    createBanner(this: any, options: BannerOptions): any;\r\n    createModal(this: any, options: ModalOptions): any;\r\n    private acceptAllButton;\r\n}\r\nexport interface Options {\r\n    cookieCategories: [\r\n        {\r\n            title: string;\r\n            description: string;\r\n            required: boolean;\r\n            scripts: [\r\n                {\r\n                    type: string;\r\n                    gtmCode: string;\r\n                    scriptTag: string;\r\n                }\r\n            ];\r\n        }\r\n    ];\r\n}\r\n"}}
